Integer Pool: 0
Uint Pool: 0
Double Pool: 0
String Pool:
	*
	loom.template:BaseClass
	
	trace
	BaseClass.as$1
	loom.template
	Object
	BaseClass::constructor()
	String
	BaseClass::methodCallOne()
	int
	Number
	BaseClass::methodCallTwo()
	void
	BaseClass::methodCallThree()
	stringValue
	methodCallTwo
	methodCallThree
	methodCallOne
	BaseClass
Namespace Pool:
	Namespace[namespace::*]
	Namespace[private::loom.template:BaseClass]
	Namespace[private::BaseClass.as$1]
	Namespace[public]
	Namespace[public::loom.template]
	Namespace[packageInternalNamespace::loom.template]
	Namespace[protectedNamespace::loom.template:BaseClass]
	Namespace[staticProtectedNamespace::loom.template:BaseClass]
	Namespace[staticProtectedNamespace::Object]
Namespace Set Pool:
	[Namespace[namespace::*]]
	[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]
	[Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template]]
Multiname Pool:
	QName[Namespace[namespace::*]:*]
	Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]
	QName[Namespace[public]:String]
	QName[Namespace[public]:int]
	QName[Namespace[public]:Number]
	QName[Namespace[public]:void]
	QName[Namespace[public]:Object]
	QName[Namespace[public]:methodCallTwo]
	QName[Namespace[public]:methodCallThree]
	QName[Namespace[public]:methodCallOne]
	QName[Namespace[public::loom.template]:BaseClass]
	Multiname[name=Object, nsset=[Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template]]]
Method Signatures (MethodInfo):
	(no namespace) function staticInitializer() : QName[Namespace[namespace::*]:*]
	(no namespace) function constructor(QName[Namespace[public]:String], QName[Namespace[public]:String]) : QName[Namespace[namespace::*]:*]
	public function QName[Namespace[public]:methodCallOne](QName[Namespace[public]:String], QName[Namespace[public]:Number]) : QName[Namespace[public]:int]
	public function QName[Namespace[public]:methodCallTwo](QName[Namespace[public]:String], QName[Namespace[public]:Number], QName[Namespace[public]:Object]) : QName[Namespace[public]:void]
	public function QName[Namespace[public]:methodCallThree](QName[Namespace[public]:String], QName[Namespace[public]:Number]) : QName[Namespace[public]:String]
	(no namespace) function scriptInitializer() : QName[Namespace[namespace::*]:*]

InstanceInfo[
	className=QName[Namespace[public::loom.template]:BaseClass]
	superclassName=QName[Namespace[public]:Object]
	isProtected=true
	protectedNamespace=Namespace[protectedNamespace::loom.template:BaseClass]
	interfaceCount=0
	interfaces=
	instanceInitializer=(no namespace) function constructor(QName[Namespace[public]:String], QName[Namespace[public]:String]) : QName[Namespace[namespace::*]:*]
	traits=[
		MethodTrait[name=QName[Namespace[public]:methodCallTwo], override=false, metadata=, dispositionId=0, method=public function QName[Namespace[public]:methodCallTwo](QName[Namespace[public]:String], QName[Namespace[public]:Number], QName[Namespace[public]:Object]) : QName[Namespace[public]:void]]
		MethodTrait[name=QName[Namespace[public]:methodCallThree], override=false, metadata=, dispositionId=0, method=public function QName[Namespace[public]:methodCallThree](QName[Namespace[public]:String], QName[Namespace[public]:Number]) : QName[Namespace[public]:String]]
		MethodTrait[name=QName[Namespace[public]:methodCallOne], override=false, metadata=, dispositionId=0, method=public function QName[Namespace[public]:methodCallOne](QName[Namespace[public]:String], QName[Namespace[public]:Number]) : QName[Namespace[public]:int]]
	]
]
ClassInfo[
	staticInitializer=(no namespace) function staticInitializer() : QName[Namespace[namespace::*]:*]
	traits=[
		
	]
]
ScriptInfo[
	scriptInitializer=(no namespace) function scriptInitializer() : QName[Namespace[namespace::*]:*]
	traits=[
		ClassTrait[name=QName[Namespace[public::loom.template]:BaseClass], classSlotId=1, classIndex=0, metadata=]
	]
]

	(no namespace) function staticInitializer() : QName[Namespace[namespace::*]:*]
	{	
		//maxStack=1, localCount=1, initScopeDepth=3, maxScopeDepth=4
		getlocal_0		
		pushscope		
		returnvoid		
	}
traits=(no traits)

	(no namespace) function constructor(QName[Namespace[public]:String], QName[Namespace[public]:String]) : QName[Namespace[namespace::*]:*]
	{	
		//maxStack=2, localCount=3, initScopeDepth=4, maxScopeDepth=5
		getlocal_0		
		pushscope		
		getlocal_0		
		constructsuper		[0]
		findpropstrict		[Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pushstring		[BaseClass::constructor()]
		callproperty		[1, Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pop		
		returnvoid		
	}
traits=(no traits)

	public function QName[Namespace[public]:methodCallOne](QName[Namespace[public]:String], QName[Namespace[public]:Number]) : QName[Namespace[public]:int]
	{	
		//maxStack=2, localCount=3, initScopeDepth=4, maxScopeDepth=5
		getlocal_0		
		pushscope		
		findpropstrict		[Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pushstring		[BaseClass::methodCallOne()]
		callproperty		[1, Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pop		
		pushbyte		[100]
		returnvalue		
	}
traits=(no traits)

	public function QName[Namespace[public]:methodCallTwo](QName[Namespace[public]:String], QName[Namespace[public]:Number], QName[Namespace[public]:Object]) : QName[Namespace[public]:void]
	{	
		//maxStack=2, localCount=4, initScopeDepth=4, maxScopeDepth=5
		getlocal_0		
		pushscope		
		findpropstrict		[Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pushstring		[BaseClass::methodCallTwo()]
		callproperty		[1, Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pop		
		returnvoid		
	}
traits=(no traits)

	public function QName[Namespace[public]:methodCallThree](QName[Namespace[public]:String], QName[Namespace[public]:Number]) : QName[Namespace[public]:String]
	{	
		//maxStack=2, localCount=3, initScopeDepth=4, maxScopeDepth=5
		getlocal_0		
		pushscope		
		findpropstrict		[Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pushstring		[BaseClass::methodCallThree()]
		callproperty		[1, Multiname[name=trace, nsset=[Namespace[private::loom.template:BaseClass], Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template], Namespace[protectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::loom.template:BaseClass], Namespace[staticProtectedNamespace::Object]]]]
		pop		
		pushstring		[stringValue]
		returnvalue		
	}
traits=(no traits)

	(no namespace) function scriptInitializer() : QName[Namespace[namespace::*]:*]
	{	
		//maxStack=2, localCount=1, initScopeDepth=1, maxScopeDepth=3
		getlocal_0		
		pushscope		
		getscopeobject		[0]
		findpropstrict		[QName[Namespace[public]:Object]]
		getproperty		[QName[Namespace[public]:Object]]
		pushscope		
		findpropstrict		[Multiname[name=Object, nsset=[Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template]]]]
		getproperty		[Multiname[name=Object, nsset=[Namespace[private::BaseClass.as$1], Namespace[public], Namespace[public::loom.template], Namespace[packageInternalNamespace::loom.template]]]]
		newclass		[ClassInfo[
	staticInitializer=(no namespace) function staticInitializer() : QName[Namespace[namespace::*]:*]
	traits=[
		
	]
]]
		popscope		
		initproperty		[QName[Namespace[public::loom.template]:BaseClass]]
		returnvoid		
	}
traits=(no traits)
[SWF] TestRunner.swf - 1,271 bytes after decompression
Update value
Update value
Update value
Now Tearing Down testCreateProxy
Update value
Update value
